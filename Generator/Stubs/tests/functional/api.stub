<?php

declare(strict_types=1);

namespace App\Containers\{{section-name}}\{{container-name}}\UI\API\Tests\Functional;

use App\Containers\{{section-name}}\{{container-name}}\UI\API\Tests\ApiTestCase;
use Symfony\Component\HttpFoundation\Response;

/**
 * Class {{class-name}}.
 *
 * @group {{_container-name}}
 * @group api
 */
class {{class-name}} extends ApiTestCase
{
    // The endpoint to be called within this test (e.g., get@v1/users)
    protected string $endpoint = 'method@endpoint';

    // Fake some access rights
    protected array $access = [
        'permissions' => '',
        'roles'       => '',
    ];

    public function test(): void
    {
        $data = [
            // 'key' => 'value',
        ];

        // Send the HTTP request
        // $response = $this->makeCall($data);

        // Assert the response status
        // $response->assertStatus(Response::HTTP_OK);

        // Make other asserts here
        // $this->assertResponseContainKeyValue([
        //     'key' => $data['key'],
        // ]);

        // Assert response contain the same structure
        // $response->assertJsonStructure([
        //     'data' => [
        //         'object',
        //         'id',
        //         'key',
        //         'updated_at',
        //     ],
        // ]);

        // $response->assertJson(
        //     fn (AssertableJson $json) =>
        //         $json->has('data')
        //             ->where('data.object', '{{model}}')
        //             // ->where('data.something', $data['something'])
        //             ->etc()
        // );

        self::assertTrue(true);
    }
}
